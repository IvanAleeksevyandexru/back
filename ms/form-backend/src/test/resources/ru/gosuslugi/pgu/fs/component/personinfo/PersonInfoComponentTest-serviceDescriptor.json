{
  "service": "Заявление о выдаче сертификата на материнский (семейный) капитал",
  "init": "s24",
  "draftTtl": 90,
  "saveDraftModeEnabled": true,
  "answerServicePrefix": "matcap_getcert_",
  "analyticsTags": [
    {
      "name": "implementerRegion",
      "path": "regAddr.okato",
      "componentId": "pd10"
    },
    {
      "name": "implementerDivision",
      "path": "territory.originalItem.title",
      "componentId": "pd29"
    }
  ],
  "screens": [
    {
      "id": "s1",
      "name": "Приветствие",
      "type": "INFO",
      "header": "Получение сертификата на материнский капитал",
      "components": [
        "is1"
      ],
      "buttons": [
        {
          "label": "Начать",
          "value": "Начать",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ],
      "isFirstScreen": true
    },
    {
      "id": "s2a",
      "name": "Кем вы приходитесь ребёнку?",
      "type": "GQUESTION",
      "header": "Кем вы приходитесь ребёнку?",
      "components": [
        "q2a"
      ]
    },
    {
      "id": "s2b",
      "name": "Ребёнок, на которого оформляется материнский капитал, был усыновлен?",
      "type": "QUESTION",
      "header": "Ребёнок, на которого оформляется материнский капитал, был усыновлен?",
      "components": [
        "q2b"
      ]
    },
    {
      "id": "s3",
      "name": "С рождением какого ребёнка вы хотите оформить материнский капитал?",
      "type": "QUESTION",
      "header": "С рождением какого ребёнка вы хотите оформить материнский капитал?",
      "components": [
        "q3"
      ]
    },
    {
      "id": "s4",
      "name": "Когда родился ребёнок?",
      "type": "QUESTION",
      "header": "Когда родился ребёнок?",
      "components": [
        "q4"
      ]
    },
    {
      "id": "s4b",
      "name": "Когда родился ребёнок? -> До 1 января 2020 года -> (Вам не положен ...)",
      "type": "INFO",
      "header": "",
      "components": [
        "is4b"
      ],
      "buttons": [
        {
          "label": "В личный кабинет",
          "value": "В личный кабинет",
          "type": "redirectToLk",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s5",
      "name": "Вы и ребёнок являетесь гражданами РФ?",
      "type": "QUESTION",
      "header": "Вы и ребёнок являетесь гражданами РФ?",
      "components": [
        "q5"
      ]
    },
    {
      "id": "s5b",
      "name": "Вы и ребёнок являетесь гражданами РФ? -> Нет -> (Вам не положен ...)",
      "type": "INFO",
      "header": "",
      "components": [
        "is5b"
      ],
      "buttons": [
        {
          "label": "В личный кабинет",
          "value": "В личный кабинет",
          "type": "redirectToLk",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s6",
      "name": "Для подачи заявления вам потребуется",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is6"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s6b",
      "name": "Для подачи заявления вам потребуется",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is6b"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s7",
      "name": "Проверьте корректность ваших данных",
      "type": "UNIQUE",
      "header": "Проверьте корректность ваших данных",
      "components": [
        "pd7"
      ],
      "buttons": [
        {
          "label": "Верно",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s8",
      "name": "Подтвердите контактный телефон",
      "type": "UNIQUE",
      "header": "Подтвердите контактный телефон",
      "components": [
        "pd8"
      ],
      "buttons": [
        {
          "label": "Верно",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s9",
      "name": "Подтвердите адрес электронной почты",
      "type": "UNIQUE",
      "header": "Подтвердите адрес электронной почты",
      "components": [
        "pd9"
      ],
      "buttons": [
        {
          "label": "Верно",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s10",
      "name": "Подтвердите адрес фактического проживания (на территории России)",
      "type": "UNIQUE",
      "header": "Подтвердите адрес фактического проживания (на территории России)",
      "subHeader": {},
      "components": [
        "pd10"
      ],
      "buttons": [
        {
          "label": "Верно",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s11",
      "name": "Укажите данные ребёнка",
      "type": "UNIQUE",
      "header": "Укажите данные ребёнка",
      "suggestion": {
        "groupId": "kid_data"
      },
      "components": [
        "cl11"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s_tupic",
      "name": "Не тот возрвст",
      "type": "INFO",
      "header": "",
      "components": [
        "is_tupic"
      ],
      "buttons": [
        {
          "label": "На главную",
          "value": "На главную",
          "type": "home",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s_tupic_u",
      "name": "Не тот возрвст",
      "type": "INFO",
      "header": "",
      "components": [
        "is_tupic_u"
      ],
      "buttons": [
        {
          "label": "На главную",
          "value": "На главную",
          "type": "home",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s_tupic2",
      "name": "Не тот возрвст",
      "type": "INFO",
      "header": "",
      "components": [
        "is_tupic2"
      ],
      "buttons": [
        {
          "label": "На главную",
          "value": "На главную",
          "type": "home",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s_tupic2_u",
      "name": "Не тот возрвст",
      "type": "INFO",
      "header": "",
      "components": [
        "is_tupic2_u"
      ],
      "buttons": [
        {
          "label": "На главную",
          "value": "На главную",
          "type": "home",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s12",
      "name": "Реквизиты актовой записи из свидетельства о рождении",
      "type": "CUSTOM",
      "header": "Реквизиты актовой записи из свидетельства о рождении",
      "suggestion": {
        "groupId": "born_cert_act_number"
      },
      "subHeader": {
        "text": "<p><a href='' id='ref_pp'>Посмотреть пример</a></p>",
        "clarifications": {
          "ref_pp": {
            "title": "Пример свидетельства о рождении",
            "text": "<p><center><img class='modal__doc-img' src='https://gu-st.ru/content/catalog/new/birthday.svg'></center></p>"
          }
        }
      },
      "components": [
        "cu12_1",
        "cu12_2"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s12b",
      "name": "Подтвердите данные ребёнка",
      "type": "UNIQUE",
      "header": "Подтвердите данные ребёнка",
      "components": [
        "ccd12b"
      ],
      "buttons": [
        {
          "label": "Верно",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s13",
      "name": "Свидетельство о рождении",
      "type": "CUSTOM",
      "header": "Свидетельство о рождении",
      "suggestion": {
        "groupId": "born_cert"
      },
      "subHeader": {
        "text": "<p><a href='' id='ref_pp'>Посмотреть пример</a></p>",
        "clarifications": {
          "ref_pp": {
            "title": "Пример свидетельства о рождении",
            "text": "<p><center><img class='modal__doc-img' src='https://gu-st.ru/content/catalog/new/birthday_number.svg'></center></p>"
          }
        }
      },
      "components": [
        "cu13"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s14",
      "name": "Укажите СНИЛС ребёнка",
      "type": "CUSTOM",
      "header": "Укажите СНИЛС ребёнка",
      "components": [
        "si14"
      ],
      "buttons": [
        {
          "label": "Верно",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s15",
      "name": "Дополнительные сведения",
      "type": "CUSTOM",
      "header": "Дополнительные сведения",
      "components": [
        "cu15_1",
        "cu15_2",
        "cu15_3",
        "cu15_4"
      ],
      "buttons": [
        {
          "label": "Отправить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s15m",
      "name": "Дополнительные сведения",
      "type": "CUSTOM",
      "cssClass": "gray-theme",
      "header": "Дополнительные сведения",
      "components": [
        "cu15_1m",
        "cu15_2m",
        "cu15_3m",
        "cu15_4m"
      ],
      "buttons": [
        {
          "label": "Отправить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s_end",
      "name": "",
      "type": "INFO",
      "cssClass": "info-screen--status",
      "header": "Заявление отправлено!",
      "components": [
        "is_end"
      ],
      "buttons": [
        {
          "label": "На главную",
          "value": "На главную",
          "type": "home",
          "action": "getNextScreen"
        }
      ],
      "isTerminal": true
    },
    {
      "id": "s_end2",
      "name": "",
      "type": "INFO",
      "cssClass": "info-screen--status",
      "header": "Заявление отправлено!",
      "components": [
        "is_end2"
      ],
      "buttons": [
        {
          "label": "На главную",
          "value": "На главную",
          "type": "home",
          "action": "getNextScreen"
        }
      ],
      "isTerminal": true
    },
    {
      "id": "s16",
      "name": "Когда родился ребёнок?_2",
      "type": "QUESTION",
      "header": "Когда родился ребёнок?",
      "components": [
        "q16"
      ]
    },
    {
      "id": "s16b",
      "name": "Когда родился ребёнок?_2 -> До 1 января 2007 года -> (Вам не положен ...)",
      "type": "INFO",
      "header": "",
      "components": [
        "is16b"
      ],
      "buttons": [
        {
          "label": "В личный кабинет",
          "value": "В личный кабинет",
          "type": "redirectToLK",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s17",
      "name": "Вы получали сертификат на материнский капитал в связи с рождением предыдущих детей?",
      "type": "QUESTION",
      "header": "Вы получали сертификат на материнский капитал в связи с рождением предыдущих детей?",
      "components": [
        "q17"
      ]
    },
    {
      "id": "s17b",
      "name": "Вы получали сертификат на материнский капитал в связи с рождением предыдущих детей? -> Да -> (Вам не положен ...)",
      "type": "INFO",
      "header": "",
      "components": [
        "is17b"
      ],
      "buttons": [
        {
          "label": "Распорядиться средствами",
          "value": "Распорядиться средствами",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s17c",
      "name": "Перенаправление",
      "type": "EMPTY",
      "header": "",
      "components": [
        "redirectcomponentpp"
      ]
    },
    {
      "id": "s18",
      "name": "Для подачи заявления вам потребуется",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is18"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s18b",
      "name": "Для подачи заявления вам потребуется",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is18b"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s18bo",
      "name": "Для подачи заявления вам потребуется",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is18bo"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s19",
      "name": "С усыновлением какого ребёнка вы хотите оформить материнский капитал?",
      "type": "QUESTION",
      "header": "С усыновлением какого ребёнка вы хотите оформить материнский капитал?",
      "components": [
        "q19"
      ]
    },
    {
      "id": "s20",
      "name": "Когда был усыновлен ребёнок?",
      "type": "QUESTION",
      "header": "Когда был усыновлен ребёнок?",
      "components": [
        "q20"
      ]
    },
    {
      "id": "s20b",
      "name": "Когда был усыновлен ребёнок?",
      "type": "QUESTION",
      "header": "Когда был усыновлен ребёнок?",
      "components": [
        "q20b"
      ]
    },
    {
      "id": "s20d",
      "name": "Вы получали сертификат?",
      "type": "QUESTION",
      "header": "Вы получали сертификат на материнский капитал в связи с рождением или усыновлением предыдущих детей?",
      "components": [
        "q20d"
      ]
    },
    {
      "id": "s21",
      "name": "Ребёнок является гражданином РФ?",
      "type": "QUESTION",
      "header": "Ребёнок является гражданином РФ?",
      "components": [
        "q21"
      ]
    },
    {
      "id": "s21b",
      "name": "Ребёнок является гражданином РФ? -> Нет -> (Вам не положен ...)",
      "type": "INFO",
      "cssClass": "info-screen--deadlock",
      "header": "",
      "components": [
        "is21b"
      ],
      "buttons": [
        {
          "label": "В личный кабинет",
          "value": "В личный кабинет",
          "type": "redirectToLK",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s22",
      "name": "Для подачи заявления вам потребуется_2",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is22"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s22b",
      "name": "Для подачи заявления вам потребуется_2",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is22b"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s22o",
      "name": "Для подачи заявления вам потребуется_отец",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is22o"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s22bo",
      "name": "Для подачи заявления вам потребуется_отец",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is22bo"
      ],
      "buttons": [
        {
          "label": "Перейти к заявлению",
          "value": "Перейти к заявлению",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s23",
      "name": "Укажите дату вступления в силу решения суда об усыновлении ребёнка",
      "type": "CUSTOM",
      "header": "Укажите дату вступления в силу решения суда об усыновлении ребёнка",
      "components": [
        "cu23"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s23b",
      "name": "Укажите дату вступления в силу решения суда об усыновлении ребёнка",
      "type": "CUSTOM",
      "header": "Укажите дату вступления в силу решения суда об усыновлении ребёнка",
      "infoComponents": [
        "infoComponentSelected"
      ],
      "components": [
        "cu23b"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s24",
      "name": "Укажите данные всех ваших детей",
      "type": "UNIQUE",
      "header": "Укажите данные всех ваших детей",
      "suggestion": {
        "groupId": "kid_data"
      },
      "components": [
        "cl24"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s25",
      "name": "Реквизиты актовой записи из свидетельства о рождении(имя ребёнка)",
      "type": "CUSTOM",
      "header": "Реквизиты актовой записи из свидетельства о рождении",
      "suggestion": {
        "groupId": "born_cert_act_number"
      },
      "infoComponents": [
        "infoComponent"
      ],
      "subHeader": {
        "text": "<p><a href='' id='ref_pp'>Посмотреть пример</a></p>",
        "clarifications": {
          "ref_pp": {
            "title": "Пример свидетельства о рождении",
            "text": "<p><center><img class='modal__doc-img' src='https://gu-st.ru/content/catalog/new/birthday.svg'></center></p>"
          }
        }
      },
      "components": [
        "cu25_1",
        "cu25_2"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s25b",
      "name": "Подтвердите данные ребёнка",
      "type": "UNIQUE",
      "header": "Подтвердите данные ребёнка",
      "components": [
        "ccd25b"
      ],
      "buttons": [
        {
          "label": "Верно",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s26",
      "name": "Свидетельство о рождении",
      "type": "CUSTOM",
      "header": "Свидетельство о рождении",
      "suggestion": {
        "groupId": "born_cert"
      },
      "infoComponents": [
        "infoComponent"
      ],
      "subHeader": {
        "text": "<p><a href='' id='ref_pp'>Посмотреть пример</a></p>",
        "clarifications": {
          "ref_pp": {
            "title": "Пример свидетельства о рождении",
            "text": "<center><img class='modal__doc-img' src='https://gu-st.ru/content/catalog/new/birthday_number.svg'></center>"
          }
        }
      },
      "components": [
        "cu26"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s27",
      "name": "Укажите СНИЛС ребёнка",
      "type": "CUSTOM",
      "header": "Укажите СНИЛС ребёнка",
      "infoComponents": [
        "infoComponent"
      ],
      "components": [
        "si27"
      ],
      "buttons": [
        {
          "label": "Верно",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s28",
      "name": "Сертификат на материнский капитал оформляется в связи с рождением:",
      "type": "UNIQUE",
      "header": "Сертификат на материнский капитал оформляется в связи с рождением:",
      "components": [
        "cl28"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s28b",
      "name": "Сертификат на материнский капитал оформляется в связи с усыновлением:",
      "type": "UNIQUE",
      "header": "Сертификат на материнский капитал оформляется в связи с усыновлением:",
      "components": [
        "cl28b"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s29",
      "name": "Подача заявления",
      "type": "UNIQUE",
      "header": "Территориальный орган Пенсионного фонда, в который подаётся заявление",
      "components": [
        "pd29"
      ],
      "buttons": [
        {
          "label": "Продолжить",
          "type": "nextStep",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s30",
      "name": "Ребёнок, на которого оформляется материнский капитал, был усыновлён?",
      "type": "QUESTION",
      "header": "Ребёнок, на которого оформляется материнский капитал, был усыновлён?",
      "components": [
        "q30"
      ]
    },
    {
      "id": "s31",
      "name": "Для подачи заявления вам потребуется",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is31"
      ],
      "buttons": [
        {
          "label": "Перейти в личный кабинет",
          "value": "Перейти в личный кабинет",
          "type": "redirectToLK",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s32",
      "name": "Для подачи заявления вам потребуется",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is32"
      ],
      "buttons": [
        {
          "label": "Перейти в личный кабинет",
          "value": "Перейти в личный кабинет",
          "type": "redirectToLK",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s33",
      "name": "Для подачи заявления вам потребуется",
      "type": "INFO",
      "cssClass": "gray-theme",
      "header": "",
      "components": [
        "is33"
      ],
      "buttons": [
        {
          "label": "Перейти в личный кабинет",
          "value": "Перейти в личный кабинет",
          "type": "redirectToLK",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s_wait",
      "name": "Сертификат скоро появится в личном кабинете",
      "type": "INFO",
      "header": "",
      "components": [
        "is_wait"
      ],
      "buttons": [
        {
          "label": "Проверить",
          "value": "Проверить",
          "type": "nextStep",
          "color": "white",
          "action": "getNextScreen"
        },
        {
          "label": "На главную",
          "value": "На главную",
          "type": "home",
          "action": "getNextScreen"
        }
      ]
    },
    {
      "id": "s_wait_b",
      "name": "Перенаправление",
      "type": "EMPTY",
      "header": "",
      "components": [
        "redirectcomponentpp2"
      ]
    }
  ],
  "applicationFields": [
    {
      "id": "redirectcomponentpp",
      "type": "Redirect",
      "label": "",
      "attrs": {
        "link": "https://www.gosuslugi.ru/10061"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "redirectcomponentpp2",
      "type": "Redirect",
      "label": "",
      "attrs": {
        "link": "https://lk.gosuslugi.ru/orders/all"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "infoComponent",
      "type": "PersonInfo",
      "attrs": {
        "fields": [
          {
            "fieldName": "birthDate"
          },
          {
            "fieldName": "firstName"
          },
          {
            "fieldName": "middleName"
          },
          {
            "fieldName": "gender"
          }
        ],
        "hidden": true
      }
    },
    {
      "id": "infoComponentSelected",
      "type": "PersonInfo",
      "attrs": {
        "cycledAnswerId": "cl24",
        "cycledAnswerIndex": "cl28b.value[0].cl24_id",
        "fields": [
          {
            "fieldName": "birthDate"
          },
          {
            "fieldName": "firstName"
          },
          {
            "fieldName": "middleName"
          },
          {
            "fieldName": "gender"
          }
        ],
        "hidden": true
      }
    },
    {
      "id": "is_tupic",
      "type": "InfoScr",
      "label": "<h3 class='text--title'><center>Проверьте данные о возрасте ребёнка</center></h3><p><font color='grey'>Вы оформляете сертификат на ребёнка, рождённого с 1 января 2020 года</p><p>Но в личном кабинете указано, что этот ребёнок родился до 2020 года. Проверьте дату рождения <a target='_lk' href='https://lk.gosuslugi.ru/profile/family/'>в Личном кабинете</a> или укажите эти сведения вручную</p>",
      "attrs": {
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is_tupic_u",
      "type": "InfoScr",
      "label": "<h3 class='text--title'><center>Неверная дата усыновления</center></h3><p><font color='grey'>Вы оформляете сертификат на ребёнка, усыновлённого с 1 января 2020 года</p><p>Но Вы указали дату раньше данного периода. Проверьте дату усыновления <a target='_lk' href='https://lk.gosuslugi.ru/profile/family/'>в Личном кабинете</a> или укажите эти сведения вручную</p>",
      "attrs": {
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is_tupic2",
      "type": "InfoScr",
      "label": "<h3 class='text--title'><center>Проверьте данные о возрасте ребёнка</center></h3><p><font color='grey'>Вы оформляете сертификат на ребёнка, рождённого c 1 января 2007 до 1 января 2020 года</p><p>Но в личном кабинете указано, что этот ребёнок родился позже или раньше данного периода. Проверьте дату рождения <a target='_lk' href='https://lk.gosuslugi.ru/orders/'>в Личном кабинете</a> или укажите эти сведения вручную</p>",
      "attrs": {
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is_tupic2_u",
      "type": "InfoScr",
      "label": "<h3 class='text--title'><center>Неверная дата усыновления</center></h3><p><font color='grey'>Вы оформляете сертификат на ребёнка, усыновлённого c 1 января 2007 до 1 января 2020 года</p><p>Но Вы указали дату позже или раньше данного периода. Проверьте дату усыновления <a target='_lk' href='https://lk.gosuslugi.ru/orders/'>в Личном кабинете</a> или укажите эти сведения вручную</p>",
      "attrs": {
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is1",
      "type": "InfoScr",
      "label": "<p>У вас родился или был усыновлен ребёнок?<div class='mt-16 mb-0'>Сертификат на материнский капитал выдаётся без заявления родителя в течение 5 рабочих дней после регистрации рождения ребёнка в ЗАГС</div><div class='mt-16 mb-0'>Проверьте его наличие в <a target='_lk' href='https://lk.gosuslugi.ru/orders/'> Личном кабинете</a></div><div class='mt-16 mb-0'>Если сертификат не поступил в указанный срок, подайте заявление</div><div class='mt-16 mb-0'>Сумма материнского капитала составляет 483 881,83 ₽ за первого ребёнка, рождённого после 1 января 2020 года и 639 431,83 ₽ для родителей двух и более детей</div><div class='mt-16 mb-0'><a href='' id='ref_up'>Узнать подробнее</a></div><div class='mt-24 mb-0'><font color='grey'>Ответьте на несколько вопросов, чтобы мы показали необходимые действия для получения услуги</font></div></p>",
      "attrs": {
        "clarifications": {
          "ref_up": {
            "title": "Получение сертификата на материнский капитал",
            "text": "<p>С 15 апреля 2020 года сертификат на материнский капитал оформляется без заявления родителя (усыновителя) в электронном виде. Пенсионный фонд оформляет сертификат в течение 5 рабочих дней на основании сведений о рождении (усыновлении) ребёнка из ЗАГС. Электронный сертификат будет загружен в личный кабинет родителя на портале Госуслуг. Проверьте его наличие. Если сертификат не поступил в указанный срок, подайте заявление.</p><p><div class='card-toggle'><input type='checkbox' id='card1'><label class='card-toggle-header' for='card1''><span class='card-toggle-label'><b>Кто может получить сертификат на маткапитал</b></span></label><div class='card-toggle-content'><ul><li>Мама, имеющая российское гражданство, у которой родился или усыновлен второй или последующий ребёнок начиная с 1 января 2007 года.</li><li>Мама, имеющая российское гражданство, у которой родился или усыновлен первый ребёнок начиная с 1 января  2020 года.</li><li>Папа, имеющий российское гражданство, если он является единственным усыновителем второго или последующего ребёнка, решение суда об усыновлении которого вступило в законную силу начиная с 1 января 2007 года.</li><li>Папа независимо от наличия у него гражданства РФ в том случае, когда у матери прекращается право на получение материнского капитала.</li><li>Папа, имеющий российское гражданство, если он является единственным усыновителем первого ребёнка, решение суда об усыновлении которого вступило в законную силу начиная с 1 января 2020 года.</li><li>Несовершеннолетний ребёнок (дети в равных долях), а также совершеннолетний ребёнок до 23 лет, обучающийся очно в образовательной организации (за исключением организаций дополнительного образования), в особых случаях , когда у родителей или усыновителя прекратилось право на дополнительные меры государственной поддержки (лишение родительских прав или смерть)</li></ul><label class='close' for='card1'>Свернуть</label></div></div><div class='card-toggle'><input type='checkbox' id='card2'><label class='card-toggle-header' for='card2''><span class='card-toggle-label'><b>Размер материнского капитала</b></span></label><div class='card-toggle-content'>При рождении первого ребёнка после 1 января 2020 года материнский капитал составит 483 881,83 ₽.<br>Если первый ребёнок был рождён до 1 января 2020 года, то материнский капитал семье не положен.<br>При рождении (усыновлении) второго и любого последующего ребёнка после 1 января 2020 года материнский капитал составит 639 431,83 ₽.<p>Материнский капитал подлежит ежегодной индексации.</p><label class='close' for='card2'>Свернуть</label></div></div><div class='card-toggle'><input type='checkbox' id='card3'><label class='card-toggle-header' for='card3''><span class='card-toggle-label'><b>Срок действия программы</b></span></label><div class='card-toggle-content'>Программа материнского капитала действует до конца 2026 года.<br><label class='close' for='card3'>Свернуть</label></div></div><div class='card-toggle'><input type='checkbox' id='card4'><label class='card-toggle-header' for='card4''><span class='card-toggle-label'><b>На что может быть потрачен материнский капитал?</b></span></label><div class='card-toggle-content'>Средства материнского капитала можно использовать на установленные законом цели:<div class='mt-8 mb-0'><ul class='dashed'><li>Улучшение жилищных условий;</li><li>Образование детей;</li><li>Ежемесячную выплату на второго ребёнка до трех лет семьям с низким доходом;</li><li>Накопительную пенсию мамы;</li><li>Приобретение товаров и услуг для социальной адаптации и интеграции в общество детей-инвалидов.</li></ul></div><p>Материнский капитал можно использовать полностью или частями на разные цели. В зависимости от цели материнский капитал можно использовать сразу после рождения ребёнка или только спустя три года.</p><p><strong>Сразу после рождения ребёнка</strong> материнский капитал можно использовать на:<div class='mt-8 mb-0'><ul class='dashed'><li>Погашение долга и процентов по ипотеке;</li><li>Первоначальный взнос по ипотеке;</li><li>Дошкольное образование детей;</li><li>Товары и услуги для адаптации детей-инвалидов.</li></ul></div><p><strong>Через три года после рождения</strong> или усыновления ребёнка, на которого выдан сертификат, материнский капитал можно потратить на все предусмотренные законом цели.</p><p>Например, материнский капитал был выдан на второго ребёнка, первый ребёнок уже ходит в школу. Оплатить из материнского капитала можно детский сад младшего. Образование старшего ребёнка можно будет оплатить, когда младшему исполнится 3 года.</p><label class='close' for='card4'>Свернуть</label></div></div></p>"
          }
        },
        "value": "",
        "visited": false
      }
    },
    {
      "id": "q2a",
      "type": "GQuestionScr",
      "label": "<p>По умолчанию право на материнский капитал возникает у матери. Если мать умерла или лишена родительских прав, сертификат дадут отцу или ребёнку (детям в равных долях)</p>",
      "attrs": {
        "answers": [
          {
            "label": [
              "Отец",
              "Мать"
            ],
            "value": "1",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Я — ребёнок",
            "value": "Я — ребёнок",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q2b",
      "type": "QuestionScr",
      "label": "<p>Материнский капитал не положен усыновителям пасынков (падчериц)</p>",
      "attrs": {
        "answers": [
          {
            "label": "Нет",
            "value": "Нет",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Да",
            "value": "Да",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q3",
      "type": "QuestionScr",
      "label": "<p>От очередности рождения ребёнка сумма материнского капитала может составлять 483 881,83 ₽ или 639 431,83 ₽ </p>",
      "attrs": {
        "answers": [
          {
            "label": "Первого",
            "value": "Первого",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Второго",
            "value": "Второго",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Третьего или последующего",
            "value": "Третьего или последующего",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q4",
      "type": "QuestionScr",
      "label": "",
      "attrs": {
        "answers": [
          {
            "label": "После 1 января 2020 года",
            "value": "После 1 января 2020 года",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "До 1 января 2020 года",
            "value": "До 1 января 2020 года",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is4b",
      "type": "InfoScr",
      "label": "<div class='mt-16 mb-0'><center><h3>Вам не положен сертификат на материнский капитал</h3></center></div><div class='mt-16 mb-0'><font color='grey'><a href='' id='ref_z'><center>По закону</a> сертификат на материнский капитал выдается при рождении или усыновлении первого ребёнка с 1 января 2020 года</center></font></div>",
      "attrs": {
        "hideSocialShare": true,
        "clarifications": {
          "ref_z": {
            "title": "Закон",
            "text": "Федеральный закон от 29 декабря 2006 года №256-ФЗ «О дополнительных мерах государственной поддержки семей, имеющих детей»"
          }
        },
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q5",
      "type": "QuestionScr",
      "label": "Материнский капитал полагается, если мать и ребёнок, в связи с рождением (усыновлением) которого возникло право, являются гражданами РФ",
      "attrs": {
        "answers": [
          {
            "label": "Да",
            "value": "Да",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Нет",
            "value": "Нет",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is5b",
      "type": "InfoScr",
      "label": "<div class='mt-16 mb-0'><h3><center>Вам не положен сертификат на материнский капитал</center></h3></div><div class='mt-16 mb-0'><font color='grey'><a href='' id='ref_z'><center>По закону</a> материнский капитал полагается, если мать и ребёнок имеют Российское гражданство</center></font></div>",
      "attrs": {
        "hideSocialShare": true,
        "clarifications": {
          "ref_z": {
            "title": "Закон",
            "text": "Федеральный закон от 29 декабря 2006 года №256-ФЗ «О дополнительных мерах государственной поддержки семей, имеющих детей»"
          }
        },
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is6",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС ребёнка</li><li><a href='' id='ref_sor'>Свидетельство о рождении ребёнка</a></li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8 mb-0'>Размер материнского капитала составит 483 881,83 ₽</div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is6b",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС детей</li><li><a href='' id='ref_sor'>Свидетельства о рождении детей</a></li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8 mb-0'>Размер материнского капитала составит 483 881,83 ₽</div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "pd7",
      "type": "ConfirmPersonalUserData",
      "label": "",
      "attrs": {
        "actions": [
          {
            "label": "Редактировать",
            "type": "profileEdit",
            "action": "editPassportData"
          }
        ],
        "fields": [
          {
            "fieldName": "firstName",
            "label": ""
          },
          {
            "fieldName": "lastName",
            "label": ""
          },
          {
            "fieldName": "middleName",
            "label": ""
          },
          {
            "fieldName": "birthDate",
            "label": "Дата рождения"
          },
          {
            "fieldName": "rfPasportSeries",
            "label": "Серия паспорта"
          },
          {
            "fieldName": "rfPasportNumber",
            "label": "Номер паспорта"
          },
          {
            "fieldName": "rfPasportIssueDate",
            "label": "Дата выдачи"
          },
          {
            "fieldName": "rfPasportIssuedBy",
            "label": "Кем выдан"
          },
          {
            "fieldName": "rfPasportIssuedById",
            "label": "Код подразделения"
          },
          {
            "fieldName": "birthPlace",
            "label": "Место рождения"
          },
          {
            "fieldName": "snils",
            "label": "СНИЛС"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "pd8",
      "type": "ConfirmPersonalUserPhone",
      "label": "Контактный телефон",
      "attrs": {
        "defaultHint": {
          "type": "warn",
          "title": "Добавьте телефон",
          "value": "Укажите ваш номер в профиле и продолжите заполнять заявление"
        },
        "actions": [
          {
            "label": "Редактировать",
            "value": "Редактирование телефона",
            "type": "redirectToLKAccount",
            "action": "redirectToLKAccount"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "pd9",
      "type": "ConfirmPersonalUserEmail",
      "label": "Электронная почта",
      "attrs": {
        "defaultHint": {
          "type": "warn",
          "title": "Добавьте почту",
          "value": "Укажите вашу почту в профиле и продолжите заполнять заявление"
        },
        "actions": [
          {
            "label": "Редактировать",
            "value": "Редактирование почты",
            "type": "redirectToLKAccount",
            "action": "redirectToLKAccount"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "pd10",
      "type": "ConfirmPersonalUserRegReadOnlyAddr",
      "label": "",
      "required": true,
      "attrs": {
        "fields": [
          {
            "fieldName": "regAddr",
            "label": ""
          }
        ],
        "addrType": "actualResidence",
        "actions": [
          {
            "label": "Редактировать",
            "value": "",
            "type": "nextStepModal",
            "action": "service/actions/editUserAddress/actualResidence"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl11",
      "type": "ChildrenList",
      "label": "Добавить данные ребёнка",
      "required": true,
      "attrs": {
        "cacheRepeatableFieldsAnswersLocally": true,
        "singleChild": true,
        "isCycled": true,
        "minAge": 0,
        "maxAge": 17,
        "components": [
          "cl11_id",
          "cl11_1",
          "cl11_2",
          "cl11_3",
          "cl11_4",
          "cl11_5",
          "cl11_ri"
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl11_id",
      "type": "StringInput",
      "label": "Идентификатор",
      "required": "false",
      "attrs": {
        "hidden": true,
        "fields": [
          {
            "fieldName": "id"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".+",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле не может быть пустым"
          }
        ],
        "hint": "подсказка"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl11_1",
      "type": "StringInput",
      "label": "Фамилия",
      "required": "true",
      "suggestionId": "lastname",
      "attrs": {
        "fstuc": "first",
        "fields": [
          {
            "fieldName": "lastName"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".+",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле не может быть пустым"
          },
          {
            "type": "RegExp",
            "value": "^[а-яА-ЯЁё]*[- ]?[а-яА-ЯЁёixvlcIVXLC]{1,}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Допустимы русские буквы и римские цифры, знак \"-\" не может повторяться или быть в конце"
          },
          {
            "type": "RegExp",
            "value": "^.{0,30}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле может содержать не более 30 символов"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl11_2",
      "type": "StringInput",
      "label": "Имя",
      "required": "true",
      "suggestionId": "firstname",
      "attrs": {
        "fstuc": "first",
        "fields": [
          {
            "fieldName": "firstName"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".+",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле не может быть пустым"
          },
          {
            "type": "RegExp",
            "value": "^[а-яА-ЯЁё]*-?[а-яА-ЯЁёixvlcIVXLC]{1,}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Допустимы русские буквы и римские цифры, знак \"-\" не может повторяться или быть в конце"
          },
          {
            "type": "RegExp",
            "value": "^.{0,30}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле может содержать не более 30 символов"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl11_3",
      "type": "StringInput",
      "label": "Отчество",
      "required": false,
      "suggestionId": "middlename",
      "attrs": {
        "fstuc": "first",
        "fields": [
          {
            "fieldName": "middleName"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".+",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле не может быть пустым"
          },
          {
            "type": "RegExp",
            "value": "^[а-яА-ЯЁё]*-?[а-яА-ЯЁёixvlcIVXLC]{1,}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Допустимы русские буквы и римские цифры, знак \"-\" не может повторяться или быть в конце"
          },
          {
            "type": "RegExp",
            "value": "^.{0,30}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле может содержать не более 30 символов"
          }
        ],
        "customUnrecLabel": "При наличии"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl11_4",
      "type": "DateInput",
      "label": "Дата рождения",
      "suggestionId": "birthday",
      "attrs": {
        "fields": [
          {
            "fieldName": "birthDate"
          }
        ],
        "accuracy": "day",
        "minDate": "-17y",
        "maxDate": "today",
        "validation": [
          {
            "type": "RegExp",
            "value": ".*",
            "ref": "",
            "condition": "",
            "errorMsg": "Поле должно быть заполнено"
          }
        ]
      },
      "required": true,
      "value": "",
      "visited": false
    },
    {
      "id": "cl11_5",
      "type": "RadioInput",
      "label": "Пол",
      "suggestionId": "gender",
      "attrs": {
        "fields": [
          {
            "fieldName": "gender"
          }
        ],
        "supportedValues": [
          {
            "label": "Мальчик",
            "value": "M",
            "isDefault": true
          },
          {
            "label": "Девочка",
            "value": "F"
          }
        ],
        "isHorizontal": true,
        "required": true
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl11_ri",
      "type": "RadioInput",
      "label": "Ребёнок новый?",
      "attrs": {
        "hidden": true,
        "fields": [
          {
            "fieldName": "isNew"
          }
        ],
        "supportedValues": [
          {
            "label": "Да",
            "value": true
          },
          {
            "label": "Нет",
            "value": false,
            "isDefault": false
          }
        ],
        "isHorizontal": true
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu12_1",
      "type": "DateInput",
      "label": "<b>Дата актовой записи</b>",
      "attrs": {
        "preset_from": {
          "type": "REF",
          "value": "ccd12b.storedValues.actDate"
        },
        "relationField": {
          "ref": "cu12_2",
          "conditions": [
            {
              "type": "MinDate",
              "value": "01.10.2018",
              "result": {
                "attrs": {
                  "validation": [
                    {
                      "type": "RegExp",
                      "value": "^(\\d{21})$",
                      "ref": "",
                      "dataType": "",
                      "condition": "",
                      "errorMsg": "Введите 21 цифру для даты с 01.10.2018"
                    },
                    {
                      "type": "RegExp",
                      "value": ".*[1-9]+.*",
                      "ref": "",
                      "dataType": "",
                      "condition": "",
                      "errorMsg": "Поле должно содержать хотя бы одну отличную от нуля цифру"
                    }
                  ],
                  "mask": [
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/"
                  ],
                  "placeholder": ""
                }
              }
            },
            {
              "type": "MaxDate",
              "value": "30.09.2018",
              "result": {
                "attrs": {
                  "validation": [
                    {
                      "type": "RegExp",
                      "value": "^\\d{1,5}$",
                      "ref": "",
                      "dataType": "",
                      "condition": "",
                      "errorMsg": "Только цифры. Не более 5 знаков для даты до 01.10.2018."
                    },
                    {
                      "type": "RegExp",
                      "value": ".*[1-9]+.*",
                      "ref": "",
                      "dataType": "",
                      "condition": "",
                      "errorMsg": "Поле должно содержать хотя бы одну отличную от нуля цифру"
                    }
                  ]
                }
              }
            }
          ]
        },
        "accuracy": "day",
        "minDateRef": "cl11.value.0.cl11_4",
        "maxDate": "today",
        "dateRestrictions": [
          {
            "condition": ">",
            "type": "ref",
            "value": "cl11.value.0.cl11_4"
          },
          {
            "condition": "<=",
            "type": "const",
            "value": "today"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".*",
            "ref": "",
            "condition": "",
            "errorMsg": "Поле должно быть заполено"
          },
          {
            "type": "maxDate",
            "ref": "",
            "value": "TODAY",
            "add": {}
          },
          {
            "type": "Date",
            "value": "",
            "ref": "",
            "condition": "<",
            "errorMsg": "Дата актовой записи должна быть больше даты рождения"
          },
          {
            "type": "Date",
            "value": "",
            "ref": "",
            "condition": ">",
            "errorMsg": "Дата актовой записи не может быть больше текущей даты"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu12_2",
      "type": "StringInput",
      "label": "<b>Номер актовой записи</b>",
      "required": true,
      "suggestionId": "born_cert_act_number",
      "attrs": {
        "preset_from": {
          "type": "REF",
          "value": "ccd12b.storedValues.rfBirthCertificateActNumber"
        },
        "validation": [
          {
            "type": "RegExp",
            "value": "^\\d*$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле может содержать только цифры"
          },
          {
            "type": "RegExp",
            "value": ".*[1-9]+.*",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле должно содержать хотя бы одну отличную от нуля цифру"
          }
        ],
        "hint": ""
      },
      "value": "",
      "visited": false
    },
    {
      "id": "ccd12b",
      "type": "ConfirmChildData",
      "label": "",
      "attrs": {
        "actions": [
          {
            "label": "Редактировать",
            "value": "",
            "type": "profileEdit",
            "action": "editChildData"
          }
        ],
        "fields": [
          {
            "fieldName": "firstName",
            "label": "",
            "required": false
          },
          {
            "fieldName": "lastName",
            "label": "",
            "required": false
          },
          {
            "fieldName": "middleName",
            "label": "",
            "required": false
          },
          {
            "fieldName": "birthDate",
            "label": "Дата рождения",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateSeries",
            "label": "Серия",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateNumber",
            "label": "Номер",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateIssueDate",
            "label": "Дата выдачи",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateIssuedBy",
            "label": "Кем выдан",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateActNumber",
            "label": "Актовая запись",
            "required": false
          },
          {
            "fieldName": "actDate",
            "label": "Дата актовой записи",
            "required": false
          },
          {
            "fieldName": "snils",
            "label": "СНИЛС",
            "required": false
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu13",
      "type": "DocInput",
      "label": "",
      "suggestionId": "born_cert",
      "attrs": {
        "fields": {
          "series": {
            "type": "input",
            "label": "Серия",
            "required": true,
            "suggestionId": "sr_serial",
            "attrs": {
              "validation": [
                {
                  "type": "RegExp",
                  "value": ".+",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле не может быть пустым"
                },
                {
                  "type": "RegExp",
                  "value": "^([i|x|v|l|c|I|V|X|L|C]{1,7})[-]([А-Яа-яёЁ]{2})$",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле должно содержать римское число (может состоять из букв I, V, X, L, C, не более 7 символов), дефис и две русские буквы. Пример: XVII-ШЮ"
                }
              ],
              "fstuc": "uppercase"
            }
          },
          "number": {
            "type": "input",
            "label": "Номер",
            "required": true,
            "suggestionId": "sr_number",
            "attrs": {
              "validation": [
                {
                  "type": "RegExp",
                  "value": ".+",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле не может быть пустым"
                },
                {
                  "type": "RegExp",
                  "value": "^[0-9]*$",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле может содержать только цифры"
                },
                {
                  "type": "RegExp",
                  "value": "^.{6}$",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Длина поля 6 символов"
                }
              ],
              "mask": [
                "/\\d/",
                "/\\d/",
                "/\\d/",
                "/\\d/",
                "/\\d/",
                "/\\d/"
              ]
            }
          },
          "date": {
            "type": "date",
            "label": "Дата выдачи",
            "required": true,
            "suggestionId": "sr_iss_date",
            "attrs": {
              "accuracy": "day",
              "minDateRef": "cl11.value.0.cl11_4",
              "maxDate": "today"
            },
            "validation": [
              {
                "type": "RegExp",
                "value": ".+",
                "ref": "",
                "dataType": "",
                "condition": "",
                "errorMsg": "Поле должно быть заполнено"
              }
            ]
          },
          "emitter": {
            "type": "input",
            "label": "Кем выдано",
            "required": true,
            "suggestionId": "sr_issued",
            "attrs": {
              "validation": [
                {
                  "type": "RegExp",
                  "value": ".+",
                  "errorMsg": "Поле не может быть пустым"
                },
                {
                  "type": "RegExp",
                  "value": "^[а-яА-ЯЁё0-9 '-«»№,]*$",
                  "errorMsg": "Поле может содержать только русские буквы, цифры, пробелы и символы ' - « » № ,"
                },
                {
                  "type": "RegExp",
                  "value": "^.{0,233}$",
                  "errorMsg": "Максимальная длина поля 233 символа"
                }
              ],
              "fstuc": "first"
            }
          }
        }
      }
    },
    {
      "id": "si14",
      "type": "SnilsInput",
      "label": "СНИЛС",
      "attrs": {
        "validation": [
          {
            "type": "RegExp",
            "value": "^([0-9]{3}-[0-9]{3}-[0-9]{3} [0-9]{2})$",
            "errorMsg": "Неверный формат"
          },
          {
            "type": "validation-fn",
            "errorMsg": "Такого номера не существует"
          },
          {
            "type": "RegExpException",
            "value": "^([0]{3}-[0]{3}-[0]{3} [0]{2})$",
            "errorMsg": "СНИЛС не может содержать все нули"
          }
        ],
        "mask": [
          "/\\d/",
          "/\\d/",
          "/\\d/",
          "-",
          "/\\d/",
          "/\\d/",
          "/\\d/",
          "-",
          "/\\d/",
          "/\\d/",
          "/\\d/",
          " ",
          "/\\d/",
          "/\\d/"
        ],
        "placeholder": "000-000-000 00"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu15_1",
      "type": "RadioInput",
      "label": "<div class='mb-12'><strong>Родительских прав в отношении ребёнка (детей)</strong></div>",
      "attrs": {
        "supportedValues": [
          {
            "label": "Не лишалась",
            "value": "false"
          },
          {
            "label": "Лишалась",
            "value": true
          }
        ],
        "isHorizontal": false
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu15_1m",
      "type": "RadioInput",
      "label": "<div class='mb-12'><strong>Родительских прав в отношении ребёнка (детей)</strong></div>",
      "attrs": {
        "supportedValues": [
          {
            "label": "Не лишался",
            "value": "false"
          },
          {
            "label": "Лишался",
            "value": true
          }
        ],
        "isHorizontal": false
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu15_2",
      "type": "RadioInput",
      "label": "<strong>Умышленных преступлений, относящихся к преступлениям против личности и повлекших за собой лишение или ограничение родительских прав в отношении ребёнка (детей)",
      "attrs": {
        "supportedValues": [
          {
            "label": "Не совершала",
            "value": "false"
          },
          {
            "label": "Совершала",
            "value": true
          }
        ],
        "isHorizontal": false
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu15_2m",
      "type": "RadioInput",
      "label": "<strong>Умышленных преступлений, относящихся к преступлениям против личности и повлекших за собой лишение или ограничение родительских прав в отношении ребёнка (детей)",
      "attrs": {
        "supportedValues": [
          {
            "label": "Не совершал",
            "value": "false"
          },
          {
            "label": "Совершал",
            "value": true
          }
        ],
        "isHorizontal": false
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu15_3",
      "type": "LabelSection",
      "label": "Об <a href='' id='ref_o'>ответственности</a> за достоверность представленных сведений предупреждена",
      "attrs": {
        "clarifications": {
          "ref_o": {
            "title": "Основания для отказа в удовлетворении заявления",
            "text": "В соответствии со п. 6 статьи 5 Федерального закона от 29 декабря 2006 года №256-ФЗ «О дополнительных мерах государственной поддержки семей, имеющих детей»:<br>Основаниями для отказа в удовлетворении заявления о выдаче сертификата являются:<div class='mt-8 mb-0'><ol><li>Отсутствие права на дополнительные меры государственной поддержки в соответствии с настоящим Федеральным законом;</li><li>Прекращение права на дополнительные меры государственной поддержки по основаниям, установленным частями 3, 4 и 6 статьи 3 настоящего Федерального закона;</li><li>Представление недостоверных сведений, в том числе сведений об очередности рождения (усыновления) и (или) о гражданстве ребёнка, в связи с рождением (усыновлением) которого возникает право на дополнительные меры государственной поддержки;</li><li>Прекращение права на дополнительные меры государственной поддержки в связи с использованием средств материнского (семейного) капитала в полном объёме.</li></ol></div>"
          }
        },
        "value": "",
        "visited": false
      }
    },
    {
      "id": "cu15_4",
      "type": "LabelSection",
      "label": "Нажимая на кнопку «Отправить заявление», я соглашаюсь с перечисленными правилами",
      "attrs": {
        "isTextHelper": true,
        "isBottomSlot": true
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu15_3m",
      "type": "LabelSection",
      "label": "Об <a href='' id='ref_o'>ответственности</a> за достоверность представленных сведений предупрежден",
      "attrs": {
        "clarifications": {
          "ref_o": {
            "title": "Основания для отказа в удовлетворении заявления",
            "text": "В соответствии со п. 6 статьи 5 Федерального закона от 29 декабря 2006 года №256-ФЗ «О дополнительных мерах государственной поддержки семей, имеющих детей»:<br>Основаниями для отказа в удовлетворении заявления о выдаче сертификата являются:<div class='mt-8 mb-0'><ol><li>Отсутствие права на дополнительные меры государственной поддержки в соответствии с настоящим Федеральным законом;</li><li>Прекращение права на дополнительные меры государственной поддержки по основаниям, установленным частями 3, 4 и 6 статьи 3 настоящего Федерального закона;</li><li>Представление недостоверных сведений, в том числе сведений об очередности рождения (усыновления) и (или) о гражданстве ребёнка, в связи с рождением (усыновлением) которого возникает право на дополнительные меры государственной поддержки;</li><li>Прекращение права на дополнительные меры государственной поддержки в связи с использованием средств материнского (семейного) капитала в полном объёме.</li></ol></div>"
          }
        },
        "value": "",
        "visited": false
      }
    },
    {
      "id": "cu15_4m",
      "type": "LabelSection",
      "label": "Нажимая на кнопку «Отправить заявление», я соглашаюсь с перечисленными правилами",
      "attrs": {
        "isTextHelper": true,
        "isBottomSlot": true
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is_end",
      "type": "InfoScr",
      "label": "<div class='block--with-icon'><img src='{staticDomainAssetsPath}/assets/icons/svg/clock.svg'><span>Решение будет принято в течение <a href='' id='ref_5kd'>5 рабочих дней</a></span></div><div class='mt-16 mb-0'>Электронный сертификат будет направлен в ваш личный кабинет</div><div class='mt-16 mb-0'>Размер материнского капитала составит 483 881,83 ₽</div>",
      "attrs": {
        "clarifications": {
          "ref_5kd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is_end2",
      "type": "InfoScr",
      "label": "<div class='block--with-icon'><img src='{staticDomainAssetsPath}/assets/icons/svg/clock.svg'><span>Решение будет принято в течение <a href='' id='ref_5kd'>5 рабочих дней</a></span></div><div class='mt-16 mb-0'>Электронный сертификат будет направлен в ваш личный кабинет</div><div class='mt-8 mb-0'>Размер материнского капитала составит 639 431,83 ₽</div>",
      "attrs": {
        "clarifications": {
          "ref_5kd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q16",
      "type": "QuestionScr",
      "label": "",
      "attrs": {
        "answers": [
          {
            "label": "После 1 января 2020 года",
            "value": "После 1 января 2020 года",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "С 1 января 2007 до 1 января 2020 года",
            "value": "С 1 января 2007 до 1 января 2020 года",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "До 1 января 2007 года",
            "value": "До 1 января 2007 года",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is16b",
      "type": "InfoScr",
      "label": "<div class='mt-16 mb-0'><h3><center>Вам не положен сертификат на материнский капитал</center></h3></div><div class='mt-16 mb-0'><font color='grey'><a href='' id='ref_z'>По закону</a> сертификат на материнский капитал выдаётся при рождении или усыновлении второго или последующего ребёнка с 1 января 2007 года</font></div>",
      "attrs": {
        "hideSocialShare": true,
        "clarifications": {
          "ref_z": {
            "title": "Закон",
            "text": "Федеральный закон от 29 декабря 2006 года №256-ФЗ «О дополнительных мерах государственной поддержки семей, имеющих детей»"
          }
        },
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q17",
      "type": "QuestionScr",
      "label": "",
      "attrs": {
        "answers": [
          {
            "label": "Нет",
            "value": "Нет",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Да",
            "value": "Да",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is17b",
      "type": "Redirect",
      "label": "<div class='mt-16 mb-0'><h3><center>Получить сертификат на материнский капитал можно один раз</center></h3></div><div class='mt-16 mb-0'><font color='grey'><center>Владельцам сертификата на материнский капитал при рождении после 1 января 2020 года второго ребёнка сумма материнского капитала автоматически увеличивается на 155 550,00 ₽</center></font></div>",
      "attrs": {
        "hideSocialShare": true,
        "link": "https://www.gosuslugi.ru/10061/4/form/",
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is18",
      "type": "InfoScr",
      "label": "<h3 class='mb-24'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС детей</li><li><a href='' id='ref_sor'>Свидетельства о рождении детей</a></li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8' style='margin-bottom:-12px'>Размер материнского капитала составит 639 431,83 ₽</div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен ",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is18b",
      "type": "InfoScr",
      "label": "<h3 class='mb-24'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС детей</li><li><a href='' id='ref_sor'>Свидетельства о рождении детей</a></li><li>Дата усыновления ребёнка из решения суда об усыновлении (удочерении)</li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8' style='margin-bottom:-12px'>Размер материнского капитала составит 639 431,83 ₽</div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен ",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is18bo",
      "type": "InfoScr",
      "label": "<h3 class='mb-24'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС детей</li><li><a href='' id='ref_sor'>Свидетельства о рождении детей, в которых в графе «мать» стоит прочерк</a></li><li>Дата усыновления ребёнка из решения суда об усыновлении (удочерении)</li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8' style='margin-bottom:-12px'>Размер материнского капитала составит 639 431,83 ₽</div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен ",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q19",
      "type": "QuestionScr",
      "label": "<p>От очередности усыновления (удочерения) ребёнка сумма материнского капитала может составлять 483 881,83 ₽ или 639 431,83 ₽</p>",
      "attrs": {
        "answers": [
          {
            "label": "Первого",
            "value": "Первого",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Второго",
            "value": "Второго",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Третьего или последующего",
            "value": "Третьего или последующего",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q20",
      "type": "QuestionScr",
      "label": "<p>Укажите дату вступления в силу решения суда об усыновлении ребёнка</p>",
      "attrs": {
        "answers": [
          {
            "label": "После 1 января 2020 года",
            "value": "После 1 января 2020 года",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "До 1 января 2020 года",
            "value": "До 1 января 2020 года",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q20b",
      "type": "QuestionScr",
      "label": "<p>Укажите дату вступления в силу решения суда об усыновлении ребёнка</p>",
      "attrs": {
        "answers": [
          {
            "label": "После 1 января 2020 года",
            "value": "После 1 января 2020 года",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "С 1 января 2007 до 1 января 2020 года",
            "value": "С 1 января 2007 до 1 января 2020 года",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "До 1 января 2007 года",
            "value": "До 1 января 2007 года",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q20d",
      "type": "QuestionScr",
      "label": "",
      "attrs": {
        "answers": [
          {
            "label": "Нет",
            "value": "Нет",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Да",
            "value": "Да",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q21",
      "type": "QuestionScr",
      "label": "<p>Материнский капитал полагается, если ребёнок, в связи с усыновлением которого возникло право, является гражданином РФ</p>",
      "attrs": {
        "answers": [
          {
            "label": "Да",
            "value": "Да",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Нет",
            "value": "Нет",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is21b",
      "type": "InfoScr",
      "label": "<div class='mt-16 mb-0'><h3><center>Вам не положен сертификат на материнский капитал</center></h3></div><div class='mt-16 mb-0'><font color='grey'><a href='' id='ref_z'><center>По закону</a> материнский капитал полагается, если ребёнок имеет Российское гражданство</center></font></div>",
      "attrs": {
        "clarifications": {
          "ref_z": {
            "title": "Закон",
            "text": "Федеральный закон от 29 декабря 2006 года №256-ФЗ «О дополнительных мерах государственной поддержки семей, имеющих детей»"
          }
        },
        "hints": [],
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/check_in_7_paper_deny2.svg"
        },
        "hideSocialShare": true
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is22",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС ребёнка</li><li><a href='' id='ref_sor'>Свидетельство о рождении ребёнка</a></li><li>Дата усыновления ребёнка из решения суда об усыновлении (удочерении)</li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8 mb-0'>Размер материнского капитала составит 483 881,83 ₽ </div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is22b",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС детей</li><li><a href='' id='ref_sor'>Свидетельства о рождении детей</a></li><li>Дата усыновления ребёнка из решения суда об усыновлении (удочерении)</li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8 mb-0'>Размер материнского капитала составит 483 881,83 ₽ </div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is22o",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС ребёнка</li><li><a href='' id='ref_sor'>Свидетельство о рождении ребёнка, в котором в графе «мать» стоит прочерк</a></li><li>Дата усыновления ребёнка из решения суда об усыновлении (удочерении)</li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8 mb-0'>Размер материнского капитала составит 483 881,83 ₽ </div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is22bo",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС детей</li><li><a href='' id='ref_sor'>Свидетельства о рождении детей, в которых в графе «мать» стоит прочерк</a></li><li>Дата усыновления ребёнка из решения суда об усыновлении (удочерении)</li></ul><p class='mb-24'>Электронный сертификат будет направлен в личный кабинет</p><p><strong>Срок исполнения и размер выплаты</strong><div class='mt-8 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><div class='mt-8 mb-0'>Размер материнского капитала составит 483 881,83 ₽ </div></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu23",
      "type": "DateInput",
      "label": "<b>Дата усыновления</b>",
      "attrs": {
        "grid": "grid-col-6 grid-col-12-sm",
        "accuracy": "day",
        "minDateRef": "cl11.value.0.cl11_4",
        "maxDate": "today",
        "validation": [
          {
            "type": "RegExp",
            "value": ".*",
            "ref": "",
            "condition": "",
            "errorMsg": "Поле должно быть заполнено"
          }
        ]
      },
      "required": true,
      "value": "",
      "visited": false
    },
    {
      "id": "cu23b",
      "type": "DateInput",
      "label": "<b>Дата усыновления</b>",
      "attrs": {
        "grid": "grid-col-6 grid-col-12-sm",
        "accuracy": "day",
        "minDateRef": "cl28b.value.0.cl24_4",
        "maxDate": "today",
        "validation": [
          {
            "type": "RegExp",
            "value": ".*",
            "ref": "",
            "condition": "",
            "errorMsg": "Поле должно быть заполнено"
          }
        ]
      },
      "required": true,
      "value": "",
      "visited": false
    },
    {
      "id": "cl24",
      "type": "ChildrenList",
      "label": "Добавить ещё ребёнка",
      "required": true,
      "attrs": {
        "singleChild": false,
        "isCycled": true,
        "uniqueBy": {
          "keys": [
            {
              "fields": [
                {
                  "fieldName": "snils",
                  "label": "СНИЛС"
                }
              ],
              "errorMsg": "Проверьте на совпадение со СНИЛС другого ребенка"
            }
          ]
        },
        "minAge": 0,
        "maxAge": 17,
        "components": [
          "cl24_id",
          "cl24_1",
          "cl24_2",
          "cl24_3",
          "cl24_4",
          "cl24_5",
          "cl24_ri"
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl24_id",
      "type": "StringInput",
      "label": "Идентификатор",
      "required": "false",
      "attrs": {
        "hidden": true,
        "fields": [
          {
            "fieldName": "id"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".+",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле не может быть пустым"
          }
        ],
        "hint": "подсказка"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl24_1",
      "type": "StringInput",
      "label": "Фамилия",
      "required": "true",
      "suggestionId": "lastname",
      "attrs": {
        "fstuc": "first",
        "fields": [
          {
            "fieldName": "lastName"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".+",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле не может быть пустым"
          },
          {
            "type": "RegExp",
            "value": "^[а-яА-ЯЁё]*[- ]?[а-яА-ЯЁёixvlcIVXLC]{1,}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Допустимы русские буквы и римские цифры, знак \"-\" не может повторяться или быть в конце"
          },
          {
            "type": "RegExp",
            "value": "^.{0,30}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле может содержать не более 30 символов"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl24_2",
      "type": "StringInput",
      "label": "Имя",
      "required": "true",
      "suggestionId": "firstname",
      "attrs": {
        "fstuc": "first",
        "fields": [
          {
            "fieldName": "firstName"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".+",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле не может быть пустым"
          },
          {
            "type": "RegExp",
            "value": "^[а-яА-ЯЁё]*-?[а-яА-ЯЁёixvlcIVXLC]{1,}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Допустимы русские буквы и римские цифры, знак \"-\" не может повторяться или быть в конце"
          },
          {
            "type": "RegExp",
            "value": "^.{0,30}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле может содержать не более 30 символов"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl24_3",
      "type": "StringInput",
      "label": "Отчество",
      "required": false,
      "suggestionId": "middlename",
      "attrs": {
        "fstuc": "first",
        "fields": [
          {
            "fieldName": "middleName"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".+",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле не может быть пустым"
          },
          {
            "type": "RegExp",
            "value": "^[а-яА-ЯЁё]*-?[а-яА-ЯЁёixvlcIVXLC]{1,}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Допустимы русские буквы и римские цифры, знак \"-\" не может повторяться или быть в конце"
          },
          {
            "type": "RegExp",
            "value": "^.{0,30}$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле может содержать не более 30 символов"
          }
        ],
        "customUnrecLabel": "При наличии"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl24_4",
      "type": "DateInput",
      "label": "Дата рождения",
      "suggestionId": "birthday",
      "attrs": {
        "brokenDateFixStrategy": "reset",
        "grid": "grid-col-6 grid-col-12-sm",
        "fields": [
          {
            "fieldName": "birthDate"
          }
        ],
        "accuracy": "day",
        "minDate": "-50y",
        "maxDate": "today",
        "validation": [
          {
            "type": "RegExp",
            "value": ".*",
            "ref": "",
            "condition": "",
            "errorMsg": "Поле должно быть заполнено"
          },
          {
            "type": "RegExp",
            "value": "",
            "ref": "",
            "condition": "",
            "errorMsg": "Поле должно быть заполнено"
          }
        ]
      },
      "required": true,
      "value": "",
      "visited": false
    },
    {
      "id": "cl24_5",
      "type": "RadioInput",
      "label": "Пол",
      "suggestionId": "gender",
      "attrs": {
        "fields": [
          {
            "fieldName": "gender"
          }
        ],
        "supportedValues": [
          {
            "label": "Мальчик",
            "value": "M",
            "isDefault": true
          },
          {
            "label": "Девочка",
            "value": "F"
          }
        ],
        "isHorizontal": true,
        "required": true
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl24_ri",
      "type": "RadioInput",
      "label": "Ребёнок новый?",
      "attrs": {
        "hidden": true,
        "fields": [
          {
            "fieldName": "isNew"
          }
        ],
        "supportedValues": [
          {
            "label": "Да",
            "value": true
          },
          {
            "label": "Нет",
            "value": false,
            "isDefault": false
          }
        ],
        "isHorizontal": true
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu25_1",
      "type": "DateInput",
      "label": "<b>Дата актовой записи</b>",
      "attrs": {
        "preset_from": {
          "type": "REF",
          "value": "ccd25b.storedValues.actDate"
        },
        "relationField": {
          "ref": "cu25_2",
          "conditions": [
            {
              "type": "MinDate",
              "value": "01.10.2018",
              "result": {
                "attrs": {
                  "validation": [
                    {
                      "type": "RegExp",
                      "value": "^(\\d{21})$",
                      "ref": "",
                      "dataType": "",
                      "condition": "",
                      "errorMsg": "Введите 21 цифру для даты с 01.10.2018"
                    },
                    {
                      "type": "RegExp",
                      "value": ".*[1-9]+.*",
                      "ref": "",
                      "dataType": "",
                      "condition": "",
                      "errorMsg": "Поле должно содержать хотя бы одну отличную от нуля цифру"
                    }
                  ],
                  "mask": [
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/",
                    "/\\d/"
                  ],
                  "placeholder": ""
                }
              }
            },
            {
              "type": "MaxDate",
              "value": "30.09.2018",
              "result": {
                "attrs": {
                  "validation": [
                    {
                      "type": "RegExp",
                      "value": "^\\d{1,5}$",
                      "ref": "",
                      "dataType": "",
                      "condition": "",
                      "errorMsg": "Только цифры. Не более 5 знаков для даты до 01.10.2018."
                    },
                    {
                      "type": "RegExp",
                      "value": ".*[1-9]+.*",
                      "ref": "",
                      "dataType": "",
                      "condition": "",
                      "errorMsg": "Поле должно содержать хотя бы одну отличную от нуля цифру"
                    }
                  ]
                }
              }
            }
          ]
        },
        "accuracy": "day",
        "minDateRef": "cl24_4.value.date",
        "maxDate": "today",
        "minDate": "cl24.value.cl24_4",
        "dateRestrictions": [
          {
            "condition": ">",
            "type": "ref",
            "value": "cl24.value.cl24_4"
          },
          {
            "condition": "<=",
            "type": "const",
            "value": "today"
          }
        ],
        "validation": [
          {
            "type": "RegExp",
            "value": ".*",
            "ref": "",
            "condition": "",
            "errorMsg": "Поле должно быть заполено"
          },
          {
            "type": "Date",
            "value": "",
            "ref": "",
            "condition": "<",
            "errorMsg": "Дата актовой записи должна быть больше даты рождения"
          },
          {
            "type": "Date",
            "value": "",
            "ref": "",
            "condition": ">",
            "errorMsg": "Дата актовой записи не может быть больше текущей даты"
          }
        ]
      },
      "required": true,
      "value": "",
      "visited": false
    },
    {
      "id": "cu25_2",
      "type": "StringInput",
      "label": "<b>Номер актовой записи</b>",
      "required": true,
      "suggestionId": "born_cert_act_number",
      "attrs": {
        "preset_from": {
          "type": "REF",
          "value": "ccd25b.storedValues.rfBirthCertificateActNumber"
        },
        "validation": [
          {
            "type": "RegExp",
            "value": "^\\d*$",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле может содержать только цифры"
          },
          {
            "type": "RegExp",
            "value": ".*[1-9]+.*",
            "ref": "",
            "dataType": "",
            "condition": "",
            "errorMsg": "Поле должно содержать хотя бы одну отличную от нуля цифру"
          }
        ],
        "hint": ""
      },
      "value": "",
      "visited": false
    },
    {
      "id": "ccd25b",
      "type": "ConfirmChildData",
      "label": "",
      "attrs": {
        "actions": [
          {
            "label": "Редактировать",
            "value": "",
            "type": "profileEdit",
            "action": "editChildData"
          }
        ],
        "fields": [
          {
            "fieldName": "firstName",
            "label": "",
            "required": false
          },
          {
            "fieldName": "lastName",
            "label": "",
            "required": false
          },
          {
            "fieldName": "middleName",
            "label": "",
            "required": false
          },
          {
            "fieldName": "birthDate",
            "label": "Дата рождения",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateSeries",
            "label": "Серия",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateNumber",
            "label": "Номер",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateIssueDate",
            "label": "Дата выдачи",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateIssuedBy",
            "label": "Кем выдан",
            "required": false
          },
          {
            "fieldName": "rfBirthCertificateActNumber",
            "label": "Актовая запись",
            "required": false
          },
          {
            "fieldName": "actDate",
            "label": "Дата актовой записи",
            "required": false
          },
          {
            "fieldName": "snils",
            "label": "СНИЛС",
            "required": false
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cu26",
      "type": "DocInput",
      "label": "",
      "suggestionId": "born_cert",
      "attrs": {
        "fields": {
          "series": {
            "type": "input",
            "label": "Серия",
            "required": true,
            "suggestionId": "sr_serial",
            "attrs": {
              "required": true,
              "validation": [
                {
                  "type": "RegExp",
                  "value": ".+",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле не может быть пустым"
                },
                {
                  "type": "RegExp",
                  "value": "^([i|x|v|l|c|I|V|X|L|C]{1,7})[-]([А-Яа-яёЁ]{2})$",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле должно содержать римское число (может состоять из букв I, V, X, L, C, не более 7 символов), дефис и две русские буквы. Пример: XVII-ШЮ",
                  "updateOn": "blur"
                }
              ],
              "fstuc": "uppercase"
            }
          },
          "number": {
            "type": "input",
            "label": "Номер",
            "required": true,
            "suggestionId": "sr_number",
            "attrs": {
              "validation": [
                {
                  "type": "RegExp",
                  "value": ".+",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле не может быть пустым"
                },
                {
                  "type": "RegExp",
                  "value": "^[0-9]*$",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле может содержать только цифры"
                },
                {
                  "type": "RegExp",
                  "value": "^.{6}$",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Длина поля 6 символов"
                }
              ],
              "mask": [
                "/\\d/",
                "/\\d/",
                "/\\d/",
                "/\\d/",
                "/\\d/",
                "/\\d/"
              ]
            }
          },
          "date": {
            "type": "date",
            "label": "Дата выдачи",
            "required": true,
            "suggestionId": "sr_iss_date",
            "attrs": {
              "brokenDateFixStrategy": "reset",
              "accuracy": "day",
              "minDateRef": "cl24_4.value.date",
              "maxDate": "today",
              "minDate": "cl24.value.cl24_4",
              "validation": [
                {
                  "type": "RegExp",
                  "value": ".+",
                  "ref": "",
                  "dataType": "",
                  "condition": "",
                  "errorMsg": "Поле должно быть заполнено"
                }
              ]
            }
          },
          "emitter": {
            "type": "input",
            "label": "Кем выдано",
            "required": true,
            "suggestionId": "sr_issued",
            "attrs": {
              "validation": [
                {
                  "type": "RegExp",
                  "value": ".+",
                  "errorMsg": "Поле не может быть пустым"
                },
                {
                  "type": "RegExp",
                  "value": "^.[а-яА-ЯЁё0-9 '-«»№,]*$",
                  "errorMsg": "Поле может содержать только русские буквы, цифры, пробелы и символы ' - « » № ,"
                },
                {
                  "type": "RegExp",
                  "value": "^.{0,233}$",
                  "errorMsg": "Максимальная длина поля 233 символа"
                }
              ],
              "fstuc": "first"
            }
          }
        }
      }
    },
    {
      "id": "cu27_namchld",
      "type": "LabelSection",
      "label": "Имя ребёнка - ${ChildName}",
      "attrs": {
        "refs": {
          "ChildName": "cl24_2.value"
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "si27",
      "type": "SnilsInput",
      "label": "СНИЛС",
      "attrs": {
        "checkRepeatedChildrenSnils": "true",
        "validation": [
          {
            "type": "RegExp",
            "value": "^([0-9]{3}-[0-9]{3}-[0-9]{3} [0-9]{2})$",
            "errorMsg": "Неверный формат"
          },
          {
            "type": "validation-fn",
            "errorMsg": "Такого номера не существует"
          },
          {
            "type": "RegExpException",
            "value": "^([0]{3}-[0]{3}-[0]{3} [0]{2})$",
            "errorMsg": "СНИЛС не может содержать все нули"
          }
        ],
        "mask": [
          "/\\d/",
          "/\\d/",
          "/\\d/",
          "-",
          "/\\d/",
          "/\\d/",
          "/\\d/",
          "-",
          "/\\d/",
          "/\\d/",
          "/\\d/",
          " ",
          "/\\d/",
          "/\\d/"
        ],
        "placeholder": "000-000-000 00"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl28",
      "type": "ChildrenList",
      "label": "",
      "attrs": {
        "singleChild": true,
        "hideAddNewChildButton": true,
        "childListRef": "cl24.value"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "cl28b",
      "type": "ChildrenList",
      "label": "",
      "attrs": {
        "singleChild": true,
        "hideAddNewChildButton": true,
        "childListRef": "cl24.value"
      },
      "value": "",
      "visited": false
    },
    {
      "id": "pd29",
      "type": "InformationCenterPfr",
      "label": "",
      "attrs": {
        "dictionaryType": "TO_PFR",
        "label": "Территориальный орган",
        "ref": [],
        "serviceCode": {
          "type": "service_2",
          "value": "10002451885"
        },
        "addressString": {
          "type": "REF",
          "value": "pd10"
        },
        "simple": {
          "items": [],
          "label": "Куда уйдёт заявление",
          "html": "<p><span class=yellow-line></span><b>Определён автоматически</b></p><p class='text-color--text-helper' style='margin-top:0'>Территориальный орган ПФР определён автоматически в соответствии с адресом вашего проживания</p>"
        },
        "full": {
          "region": {
            "label": "Регион",
            "attributeName": "parent_attr",
            "condition": "CONTAINS"
          },
          "district": {
            "label": "Район (Административный центр)",
            "attributeName": "parent_attr",
            "condition": "EQUALS"
          },
          "cityDistrict": {
            "label": "Городской район",
            "attributeName": "parent_attr",
            "condition": "EQUALS"
          },
          "territory": {
            "label": "Территориальный орган",
            "attributeName": "parent_attr",
            "condition": "CONTAINS"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "q30",
      "type": "QuestionScr",
      "label": "<p>Отец может получить материнский капитал в двух случаях:</p><p><ul><li>Мать умерла или лишена родительских прав</li><li>Отец — единственный усыновитель</li></ul><p>Материнский капитал не положен усыновителям пасынков (падчериц)</p>",
      "attrs": {
        "answers": [
          {
            "label": "Нет",
            "value": "Нет",
            "type": "nextStep",
            "action": "getNextScreen"
          },
          {
            "label": "Да",
            "value": "Да",
            "type": "nextStep",
            "action": "getNextScreen"
          }
        ]
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is31",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС ребёнка</li><li><a href='' id='ref_sor'>Свидетельство о рождении ребёнка</a></li><li>Документ, который подтверждает наступление особых обстоятельств:<br><ul><li>Свидетельство о смерти женщины, родившей или усыновившей детей</li><li>Решение органов опеки и попечистельства о лишении женщины, родившей или усыновившей детей родительских прав;</li><li>Решение суда о совершении женщиной в отношении своего ребёнка (детей) умышленного преступления, относящегося к преступлениям против личности;</li><li>Свидетельства о смерти родителей (усыновителей)</li><li>Решение органов опеки и попчительства о лишении родителей (усыновителей) родительских прав;</li><li>Решение суда о совершении родителями или усыновителями по отношению к ребёнку умышленного преступления, относящегося к преступлениям против личности</li><li>Решение об отмене усыновления ребёнка, в связи с усыновлением которого возникло право на материнский капитал</li></li></ul></ul><p>Для подачи заявления посетите Пенсионный фонд или МФЦ с необходимыми документами</p><p><strong>Срок исполнения</strong><div class='mt-12 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><p>Размер материнского капитала\nсоставит 483 881,83 ₽</p></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is32",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС детей</li><li><a href='' id='ref_sor'>Свидетельства о рождении детей</a></li><li>Документ, который подтверждает наступление особых обстоятельств:<br><ul><li>Свидетельство о смерти женщины, родившей или усыновившей детей</li><li>Решение органов опеки и попечистельства о лишении женщины, родившей или усыновившей детей родительских прав;</li><li>Решение суда о совершении женщиной в отношении своего ребёнка (детей) умышленного преступления, относящегося к преступлениям против личности;</li><li>Свидетельства о смерти родителей (усыновителей)</li><li>Решение органов опеки и попчительства о лишении родителей (усыновителей) родительских прав;</li><li>Решение суда о совершении родителями или усыновителями по отношению к ребёнку умышленного преступления, относящегося к преступлениям против личности</li><li>Решение об отмене усыновления ребёнка, в связи с усыновлением которого возникло право на материнский капитал</li></li></ul></ul><p>Для подачи заявления посетите Пенсионный фонд или МФЦ с необходимыми документами</p><p><strong>Срок исполнения</strong><div class='mt-12 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><p>Размер материнского капитала\nсоставит 483 881,83 ₽</p></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is33",
      "type": "InfoScr",
      "label": "<h3 class='mb-32'>Для подачи заявления вам потребуется</h3><ul class='mb-32'><li>Паспорт</li><li>СНИЛС детей</li><li><a href='' id='ref_sor'>Свидетельства о рождении детей</a></li><li>Документ, который подтверждает наступление особых обстоятельств:<br><ul><li>Свидетельство о смерти женщины, родившей или усыновившей детей</li><li>Решение органов опеки и попечистельства о лишении женщины, родившей или усыновившей детей родительских прав;</li><li>Решение суда о совершении женщиной в отношении своего ребёнка (детей) умышленного преступления, относящегося к преступлениям против личности;</li><li>Свидетельства о смерти родителей (усыновителей)</li><li>Решение органов опеки и попчительства о лишении родителей (усыновителей) родительских прав;</li><li>Решение суда о совершении родителями или усыновителями по отношению к ребёнку умышленного преступления, относящегося к преступлениям против личности</li><li>Решение об отмене усыновления ребёнка, в связи с усыновлением которого возникло право на материнский капитал</li></li></ul></ul><p>Для подачи заявления посетите Пенсионный фонд или МФЦ с необходимыми документами</p><p><strong>Срок исполнения</strong><div class='mt-12 mb-24'>Решение будет принято в течение <a href='' id='ref_5rd'>5 рабочих дней</a></div><p>Размер материнского капитала\nсоставит 639 431,83 ₽</p></p>",
      "attrs": {
        "clarifications": {
          "ref_sor": {
            "title": "Если свидетельство о рождении выдано иностранным государством",
            "text": "Если у вас свидетельство о рождении иностранного государства, то посетите Пенсионный фонд или МФЦ для подачи заявления"
          },
          "ref_5rd": {
            "title": "Срок рассмотрения может быть увеличен",
            "text": "Срок рассмотрения может быть увеличен до 15 рабочих дней, в случае отсутствия  ответа от ведомств при осуществлении проверок"
          }
        }
      },
      "value": "",
      "visited": false
    },
    {
      "id": "is_wait",
      "type": "Redirect",
      "label": "<center><h3>Сертификат скоро появится в личном кабинете</h3></center><div class = 'mt-16 mb-0'><font color = 'gray'>Сертификат на маткапитал пришлют в ваш личный кабинет без заявления — после регистрации рождения ребёнка в течение 5 рабочих дней</div><div class = 'mt-16 mb-0'>Если сертификат не появится, подайте заявление самостоятельно</font></div>",
      "attrs": {
        "image": {
          "src": "https://gu-st.ru/content/catalog/new/divorce_5_coudnt_edit.svg"
        }
      },
      "value": "",
      "visited": false
    }
  ],
  "screenRules": {
    "s1": [
      {
        "conditions": [
          {
            "field": "is1",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s2a"
      }
    ],
    "s2a": [
      {
        "conditions": [
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "F"
              }
            ]
          }
        ],
        "nextDisplay": "s2b"
      },
      {
        "conditions": [
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "M"
              }
            ]
          }
        ],
        "nextDisplay": "s30"
      },
      {
        "conditions": [
          {
            "field": "q2a",
            "visited": true,
            "value": "Я — ребёнок"
          }
        ],
        "nextDisplay": "s31"
      }
    ],
    "s2b": [
      {
        "conditions": [
          {
            "field": "q2b",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s3"
      },
      {
        "conditions": [
          {
            "field": "q2b",
            "visited": true,
            "value": "Да"
          }
        ],
        "nextDisplay": "s19"
      }
    ],
    "s3": [
      {
        "conditions": [
          {
            "field": "q3",
            "visited": true,
            "value": "Первого"
          }
        ],
        "nextDisplay": "s4"
      },
      {
        "conditions": [
          {
            "field": "q3",
            "visited": true,
            "value": "Второго"
          }
        ],
        "nextDisplay": "s16"
      },
      {
        "conditions": [
          {
            "field": "q3",
            "visited": true,
            "value": "Третьего или последующего"
          }
        ],
        "nextDisplay": "s16"
      }
    ],
    "s4": [
      {
        "conditions": [
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s5"
      },
      {
        "conditions": [
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "q30",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s21"
      },
      {
        "conditions": [
          {
            "field": "q4",
            "visited": true,
            "value": "До 1 января 2020 года"
          }
        ],
        "nextDisplay": "s4b"
      }
    ],
    "s5": [
      {
        "conditions": [
          {
            "field": "q5",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s6"
      },
      {
        "conditions": [
          {
            "field": "q5",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q16",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s18"
      },
      {
        "conditions": [
          {
            "field": "q5",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q16",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          }
        ],
        "nextDisplay": "s6b"
      },
      {
        "conditions": [
          {
            "field": "q5",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s5b"
      }
    ],
    "s6": [
      {
        "conditions": [
          {
            "field": "is6",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s6b": [
      {
        "conditions": [
          {
            "field": "is6b",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s7": [
      {
        "conditions": [
          {
            "field": "pd7",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s8"
      }
    ],
    "s8": [
      {
        "conditions": [
          {
            "field": "pd8",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s9"
      }
    ],
    "s9": [
      {
        "conditions": [
          {
            "field": "pd9",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s10"
      }
    ],
    "s10": [
      {
        "conditions": [
          {
            "field": "pd10",
            "visited": true,
            "value": null
          },
          {
            "field": "q3",
            "visited": true,
            "value": "Первого"
          }
        ],
        "nextDisplay": "s11"
      },
      {
        "conditions": [
          {
            "field": "pd10",
            "visited": true,
            "value": null
          },
          {
            "field": "q3",
            "visited": true,
            "value": "Второго"
          }
        ],
        "nextDisplay": "s24"
      },
      {
        "conditions": [
          {
            "field": "pd10",
            "visited": true,
            "value": null
          },
          {
            "field": "q3",
            "visited": true,
            "value": "Третьего или последующего"
          }
        ],
        "nextDisplay": "s24"
      },
      {
        "conditions": [
          {
            "field": "pd10",
            "visited": true,
            "value": null
          },
          {
            "field": "q19",
            "visited": true,
            "value": "Первого"
          }
        ],
        "nextDisplay": "s11"
      },
      {
        "conditions": [
          {
            "field": "pd10",
            "visited": true,
            "value": null
          },
          {
            "field": "q19",
            "visited": true,
            "value": "Второго"
          }
        ],
        "nextDisplay": "s24"
      },
      {
        "conditions": [
          {
            "field": "pd10",
            "visited": true,
            "value": null
          },
          {
            "field": "q19",
            "visited": true,
            "value": "Третьего или последующего"
          }
        ],
        "nextDisplay": "s24"
      }
    ],
    "s11": [
      {
        "conditions": [
          {
            "field": "cl11",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s29"
      },
      {
        "conditions": [
          {
            "field": "cl11",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Да"
          }
        ],
        "nextDisplay": "s23"
      },
      {
        "conditions": [
          {
            "field": "cl11",
            "visited": true,
            "value": null
          },
          {
            "field": "q30",
            "visited": true,
            "value": "Да"
          }
        ],
        "nextDisplay": "s23"
      }
    ],
    "s15": [
      {
        "conditions": [
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cu15_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cu15_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end2"
      },
      {
        "conditions": [
          {
            "field": "q20",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cu15_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end"
      },
      {
        "conditions": [
          {
            "field": "q20b",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cu15_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end2"
      },
      {
        "conditions": [
          {
            "field": "q20b",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          },
          {
            "field": "cu15_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          },
          {
            "field": "cu15_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end"
      }
    ],
    "s15m": [
      {
        "conditions": [
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cu15_1m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3m",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cu15_1m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3m",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end2"
      },
      {
        "conditions": [
          {
            "field": "q20",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cu15_1m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3m",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end"
      },
      {
        "conditions": [
          {
            "field": "q20b",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cu15_1m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3m",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end2"
      },
      {
        "conditions": [
          {
            "field": "q20b",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          },
          {
            "field": "cu15_1m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3m",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          },
          {
            "field": "cu15_1m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_2m",
            "visited": true,
            "value": null
          },
          {
            "field": "cu15_3m",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s_end"
      }
    ],
    "s16": [
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s17"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          }
        ],
        "nextDisplay": "s17"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "До 1 января 2007 года"
          }
        ],
        "nextDisplay": "s16b"
      }
    ],
    "s17": [
      {
        "conditions": [
          {
            "field": "q17",
            "visited": true,
            "value": "Нет"
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s5"
      },
      {
        "conditions": [
          {
            "field": "q17",
            "visited": true,
            "value": "Нет"
          },
          {
            "field": "q30",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s21"
      },
      {
        "conditions": [
          {
            "field": "q17",
            "visited": true,
            "value": "Да"
          }
        ],
        "nextDisplay": "s17b"
      }
    ],
    "s17b": [
      {
        "conditions": [
          {
            "field": "is17b",
            "visited": true,
            "value": "Распорядиться средствами"
          }
        ],
        "nextDisplay": "s17c"
      }
    ],
    "s18": [
      {
        "conditions": [
          {
            "field": "is18",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s18b": [
      {
        "conditions": [
          {
            "field": "is18b",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s18bo": [
      {
        "conditions": [
          {
            "field": "is18bo",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s19": [
      {
        "conditions": [
          {
            "field": "q19",
            "visited": true,
            "value": "Первого"
          }
        ],
        "nextDisplay": "s20"
      },
      {
        "conditions": [
          {
            "field": "q19",
            "visited": true,
            "value": "Второго"
          }
        ],
        "nextDisplay": "s20b"
      },
      {
        "conditions": [
          {
            "field": "q19",
            "visited": true,
            "value": "Третьего или последующего"
          }
        ],
        "nextDisplay": "s20b"
      }
    ],
    "s20": [
      {
        "conditions": [
          {
            "field": "q20",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s21"
      },
      {
        "conditions": [
          {
            "field": "q20",
            "visited": true,
            "value": "До 1 января 2020 года"
          }
        ],
        "nextDisplay": "s4b"
      }
    ],
    "s20b": [
      {
        "conditions": [
          {
            "field": "q20b",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s20d"
      },
      {
        "conditions": [
          {
            "field": "q20b",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          }
        ],
        "nextDisplay": "s20d"
      },
      {
        "conditions": [
          {
            "field": "q20b",
            "visited": true,
            "value": "До 1 января 2007 года"
          }
        ],
        "nextDisplay": "s16b"
      }
    ],
    "s20d": [
      {
        "conditions": [
          {
            "field": "q20d",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s21"
      },
      {
        "conditions": [
          {
            "field": "q20d",
            "visited": true,
            "value": "Да"
          }
        ],
        "nextDisplay": "s17b"
      }
    ],
    "s21": [
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "F"
              }
            ]
          },
          {
            "field": "q20",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s22"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "M"
              }
            ]
          },
          {
            "field": "q20",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s22o"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "M"
              }
            ]
          },
          {
            "field": "q20b",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          }
        ],
        "nextDisplay": "s22bo"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "F"
              }
            ]
          },
          {
            "field": "q20b",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          }
        ],
        "nextDisplay": "s22b"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "F"
              }
            ]
          },
          {
            "field": "q20b",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s18b"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "M"
              }
            ]
          },
          {
            "field": "q20b",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s18bo"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "M"
              }
            ]
          },
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s31"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "M"
              }
            ]
          },
          {
            "field": "q16",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s33"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "M"
              }
            ]
          },
          {
            "field": "q16",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          }
        ],
        "nextDisplay": "s32"
      },
      {
        "conditions": [
          {
            "field": "q21",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s21b"
      }
    ],
    "s22": [
      {
        "conditions": [
          {
            "field": "is22",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s22b": [
      {
        "conditions": [
          {
            "field": "is22b",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s22o": [
      {
        "conditions": [
          {
            "field": "is22o",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s22bo": [
      {
        "conditions": [
          {
            "field": "is22bo",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s7"
      }
    ],
    "s23": [
      {
        "conditions": [
          {
            "field": "cu23",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s29"
      }
    ],
    "s23b": [
      {
        "conditions": [
          {
            "field": "cu23b",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": "s29"
      }
    ],
    "s24": [
      {
        "conditions": [
          {
            "field": "cl24",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s28"
      },
      {
        "conditions": [
          {
            "field": "cl24",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Да"
          }
        ],
        "nextDisplay": "s28b"
      },
      {
        "conditions": [
          {
            "field": "cl24",
            "visited": true,
            "value": null
          },
          {
            "field": "q30",
            "visited": true,
            "value": "Да"
          }
        ],
        "nextDisplay": "s28b"
      },
      {
        "conditions": [
          {
            "field": "cl24",
            "visited": true,
            "value": null
          },
          {
            "field": "q30",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s28"
      }
    ],
    "s28": [
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cl28.value[0].cl24_4",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "01.01.2020"
              }
            ]
          }
        ],
        "nextDisplay": "s_tupic"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cl28.value[0].cl24_4",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "31.12.2019"
              }
            ]
          }
        ],
        "nextDisplay": "s29"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          },
          {
            "field": "cl28.value[0].cl24_4",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "31.12.2006"
              }
            ]
          },
          {
            "field": "cl28.value[0].cl24_4",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "01.01.2020"
              }
            ]
          }
        ],
        "nextDisplay": "s29"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          },
          {
            "field": "cl28.value[0].cl24_4",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "01.01.2007"
              }
            ]
          }
        ],
        "nextDisplay": "s_tupic2"
      },
      {
        "conditions": [
          {
            "field": "q16",
            "visited": true,
            "value": "С 1 января 2007 до 1 января 2020 года"
          },
          {
            "field": "cl28.value[0].cl24_4",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "01.01.2020"
              }
            ]
          }
        ],
        "nextDisplay": "s_tupic2"
      }
    ],
    "s28b": [
      {
        "conditions": [
          {
            "field": "cl28b",
            "visited": true,
            "value": null
          },
          {
            "field": "q19",
            "visited": true,
            "value": "Второго"
          }
        ],
        "nextDisplay": "s23b"
      },
      {
        "conditions": [
          {
            "field": "cl28b",
            "visited": true,
            "value": null
          },
          {
            "field": "q19",
            "visited": true,
            "value": "Третьего или последующего"
          }
        ],
        "nextDisplay": "s23b"
      }
    ],
    "s29": [
      {
        "conditions": [
          {
            "field": "pd29",
            "visited": true,
            "value": null
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "F"
              }
            ]
          }
        ],
        "nextDisplay": "s15"
      },
      {
        "conditions": [
          {
            "field": "pd29",
            "visited": true,
            "value": null
          },
          {
            "field": "q2a",
            "visited": true,
            "value": "1"
          },
          {
            "protectedField": "gender",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "M"
              }
            ]
          }
        ],
        "nextDisplay": "s15m"
      }
    ],
    "s30": [
      {
        "conditions": [
          {
            "field": "q30",
            "visited": true,
            "value": "Нет"
          }
        ],
        "nextDisplay": "s3"
      },
      {
        "conditions": [
          {
            "field": "q30",
            "visited": true,
            "value": "Да"
          }
        ],
        "nextDisplay": "s19"
      }
    ],
    "s_wait": [
      {
        "conditions": [
          {
            "field": "is_wait",
            "visited": true,
            "value": "Проверить"
          }
        ],
        "nextDisplay": "s_wait_b"
      }
    ]
  },
  "cycledScreenRules": {
    "s11": [
      {
        "conditions": [
          {
            "field": "cl11_ri",
            "visited": true,
            "value": true
          },
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cl11_4.value",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "31.12.2019"
              }
            ]
          }
        ],
        "nextDisplay": "s13"
      },
      {
        "conditions": [
          {
            "field": "cl11_ri",
            "visited": true,
            "value": true
          },
          {
            "field": "q20",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s13"
      },
      {
        "conditions": [
          {
            "field": "cl11_ri",
            "visited": true,
            "value": false
          },
          {
            "field": "q20",
            "visited": true,
            "value": "После 1 января 2020 года"
          }
        ],
        "nextDisplay": "s12b"
      },
      {
        "conditions": [
          {
            "field": "cl11_ri",
            "visited": true,
            "value": false
          },
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cl11_4.value",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "31.12.2019"
              }
            ]
          }
        ],
        "nextDisplay": "s12b"
      },
      {
        "conditions": [
          {
            "field": "cl11_ri",
            "visited": true,
            "value": false
          },
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cl11_4.value",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "01.01.2020"
              }
            ]
          }
        ],
        "nextDisplay": "s_tupic"
      },
      {
        "conditions": [
          {
            "field": "cl11_ri",
            "visited": true,
            "value": true
          },
          {
            "field": "q4",
            "visited": true,
            "value": "После 1 января 2020 года"
          },
          {
            "field": "cl11_4.value",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "01.01.2020"
              }
            ]
          }
        ],
        "nextDisplay": "s_tupic"
      }
    ],
    "s12": [
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cl11_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cl11_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s14"
      },
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cl11_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s14"
      },
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s14"
      },
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s14"
      },
      {
        "conditions": [
          {
            "field": "cu12_1.value",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu12_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      }
    ],
    "s13": [
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "cl11_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s12"
      },
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          }
        ],
        "nextDisplay": "s12"
      },
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s12"
      },
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s14"
      },
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s14"
      },
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "cu13",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      }
    ],
    "s12b": [
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s13"
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s12"
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s12"
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s12"
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s12"
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s12"
      },
      {
        "conditions": [
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd12b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s14"
      }
    ],
    "s14": [
      {
        "conditions": [
          {
            "field": "si14",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": null
      }
    ],
    "s24": [
      {
        "conditions": [
          {
            "field": "cl24_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s26"
      },
      {
        "conditions": [
          {
            "field": "cl24_ri",
            "visited": true,
            "value": false
          }
        ],
        "nextDisplay": "s25b"
      }
    ],
    "s25": [
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cl24_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s27"
      },
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cl24_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s27"
      },
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "cl24_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s27"
      },
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s27"
      },
      {
        "conditions": [
          {
            "field": "cu25_1",
            "visited": true,
            "value": null
          },
          {
            "field": "cu25_1.value",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "cu25_2",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      }
    ],
    "s26": [
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "cl24_ri",
            "visited": true,
            "value": true
          }
        ],
        "nextDisplay": "s25"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          }
        ],
        "nextDisplay": "s25"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s25"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s27"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s27"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Нет"
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s28"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Нет"
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s28"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Нет"
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s28b"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s28b"
      },
      {
        "conditions": [
          {
            "field": "cu26",
            "visited": true,
            "value": null
          },
          {
            "field": "q2b",
            "visited": true,
            "value": "Да"
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      }
    ],
    "s25b": [
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": null
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "visited": true,
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s26"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s25"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s25"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s25"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s25"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s25"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "before",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s27"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s27"
      },
      {
        "conditions": [
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateSeries",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssueDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateIssuedBy",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.rfBirthCertificateActNumber",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": "-"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "String",
            "predicate": "notEquals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.actDate",
            "fieldType": "Date",
            "predicate": "after",
            "args": [
              {
                "type": "UserConst",
                "value": "today"
              },
              {
                "type": "UserConst",
                "value": "day"
              },
              {
                "type": "UserConst",
                "value": "{\"day\": -7}"
              }
            ]
          },
          {
            "field": "ccd25b.value.storedValues.snils",
            "fieldType": "String",
            "predicate": "equals",
            "args": [
              {
                "type": "UserConst",
                "value": ""
              }
            ]
          }
        ],
        "nextDisplay": "s_wait"
      }
    ],
    "s27": [
      {
        "conditions": [
          {
            "field": "si27",
            "visited": true,
            "value": null
          }
        ],
        "nextDisplay": null
      }
    ]
  }
}